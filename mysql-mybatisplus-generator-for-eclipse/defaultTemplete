<?xml version="1.0" encoding="UTF-8" standalone="no"?><templetes><templete id="dao">package ${packageName}.mapper;&#13;
&#13;
import com.baomidou.mybatisplus.mapper.AutoMapper;&#13;
import ${packageName}.entity.${entityName};&#13;
import ${packageName}.mybatis.MyBatisRepository;&#13;
&#13;
/**&#13;
 *&#13;
 * @author ${author}&#13;
 * @Date ${createDate}&#13;
 */&#13;
@MyBatisRepository&#13;
public interface ${entityName}Mapper extends AutoMapper&lt;${entityName}&gt; {&#13;
	&#13;
	&#13;
}&#13;
</templete><templete id="service">package ${packageName}.service;&#13;
&#13;
import ${packageName}.entity.${entityName};&#13;
import com.baomidou.framework.service.ISuperService;&#13;
&#13;
/**&#13;
 *&#13;
 * @author ${author}&#13;
 * @Date ${createDate}&#13;
 */&#13;
public interface ${entityName}Service extends ISuperService&lt;${entityName}&gt; {&#13;
&#13;
}&#13;
</templete><templete id="mapper">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;&#13;
&lt;!-- table:${tableName} date:${createDate} comment:${tableComment} --&gt;&#13;
&lt;!-- namespace必须指向${packageName}.mapper包下的Mapper接口 --&gt;&#13;
&lt;mapper namespace="${packageName}.mapper.${entityName}Mapper"&gt;&#13;
	&lt;!-- 通用查询结果列--&gt;&#13;
	&lt;sql id="Base_Column_List"&gt;${baseColumnList}&lt;/sql&gt;&#13;
	&#13;
	&#13;
&lt;/mapper&gt; &#13;
</templete><templete id="repository">package ${packageName}.mybatis;&#13;
&#13;
import java.lang.annotation.Documented;&#13;
import java.lang.annotation.ElementType;&#13;
import java.lang.annotation.Retention;&#13;
import java.lang.annotation.RetentionPolicy;&#13;
import java.lang.annotation.Target;&#13;
&#13;
import org.springframework.stereotype.Component;&#13;
&#13;
/**&#13;
 * &#13;
 * 注解，用于标识MyBatis的Dao,方便&#13;
 * {@link org.mybatis.spring.mapper.MapperScannerConfigurer}的扫描。&#13;
 * &#13;
 * @author ${author}&#13;
 * @Date ${createDate}&#13;
 * &#13;
 */&#13;
@Retention(RetentionPolicy.RUNTIME)&#13;
@Target(ElementType.TYPE)&#13;
@Documented&#13;
@Component&#13;
public @interface MyBatisRepository {&#13;
	String value() default "";&#13;
}&#13;
</templete><templete id="entity">package ${packageName}.entity;&#13;
&#13;
import java.io.Serializable;&#13;
&#13;
import com.baomidou.mybatisplus.annotations.IdType;&#13;
import com.baomidou.mybatisplus.annotations.TableField;&#13;
import com.baomidou.mybatisplus.annotations.TableId;&#13;
import com.baomidou.mybatisplus.annotations.TableName;&#13;
&#13;
/**&#13;
 * &lt;p&gt;${entityName} for ${tableName}&lt;/p&gt;&lt;br /&gt;&#13;
 * ${tableComment}&#13;
 * @author ${author}&#13;
 * @Date ${createDate}&#13;
 */&#13;
 @TableName("${tableName}")&#13;
public class ${entityName} extends BaseEntity implements Serializable {&#13;
&#13;
	@TableField(exist=false)&#13;
	private static final long serialVersionUID = 1L;&#13;
	&#13;
	&lt;#list entityFieldList as column&gt;&#13;
	/**${column.comment}*/&#13;
	&lt;#if primaryKey??&gt;&#13;
		&lt;#if column.lowerPropertyName == primaryKey.lowerPropertyName&gt;&#13;
	@TableId(value = "${column.columnName}", type = IdType.AUTO)&#13;
		&lt;#else&gt;&#13;
	@TableField(value = "${column.columnName}")&#13;
		&lt;/#if&gt;&#13;
	&lt;#else&gt;&#13;
	@TableField(value = "${column.columnName}")&#13;
	&lt;/#if&gt;&#13;
	private ${column.propertyType} ${column.lowerPropertyName};&#13;
	&lt;/#list&gt;&#13;
&#13;
	&#13;
	&lt;#list entityFieldList as method&gt;&#13;
	public void set${method.upperPropertyName}(${method.propertyType} ${method.lowerPropertyName}) {&#13;
		this.${method.lowerPropertyName} = ${method.lowerPropertyName};&#13;
	}&#13;
	&#13;
	public ${method.propertyType} get${method.upperPropertyName}() {&#13;
		return this.${method.lowerPropertyName};&#13;
	}&#13;
	&lt;/#list&gt;&#13;
	&#13;
&#13;
}&#13;
</templete><templete id="baseEntity">package ${packageName}.entity;&#13;
&#13;
import java.io.Serializable;&#13;
import java.util.Map;&#13;
&#13;
/**&#13;
 * 所有表的基类&#13;
 * &#13;
 * @author ${author}&#13;
 * @Date ${createDate}&#13;
 *&#13;
 */&#13;
public class BaseEntity implements Serializable {&#13;
&#13;
	@TableField(exist=false)&#13;
	private static final long serialVersionUID = 1L;&#13;
&#13;
	/**&#13;
	 * 备份时调用，以key=value的形式存储，和数据库字段对应&#13;
	 * &#13;
	 * @return&#13;
	 */&#13;
	public Map&lt;String, Object&gt; backup() {&#13;
		return null;&#13;
	}&#13;
&#13;
	/**&#13;
	 * 回滚、还原，和backup方法相反&#13;
	 * &#13;
	 * @param data&#13;
	 */&#13;
	public void restore(Map&lt;String, Object&gt; data) {&#13;
	}&#13;
&#13;
	/**&#13;
	 * 转换指定类型的数据&#13;
	 * &#13;
	 * @param object&#13;
	 * @param t&#13;
	 * @return&#13;
	 */&#13;
	protected &lt;T&gt; T transform(Object object, Class&lt;T&gt; entityClazz, T defaultValue) {&#13;
		if (object != null) {&#13;
			try {&#13;
				T t = entityClazz.cast(object);&#13;
				return t;&#13;
			} catch (ClassCastException e) {&#13;
				e.printStackTrace();&#13;
			}&#13;
		}&#13;
		return defaultValue;&#13;
	}&#13;
&#13;
}&#13;
</templete><templete id="serviceImpl">package ${packageName}.service.impl;&#13;
&#13;
import org.springframework.stereotype.Service;&#13;
&#13;
import ${packageName}.mapper.${entityName}Mapper;&#13;
import ${packageName}.entity.${entityName};&#13;
import ${packageName}.service.${entityName}Service;&#13;
&#13;
import com.baomidou.framework.service.impl.SuperServiceImpl;&#13;
&#13;
/**&#13;
 *&#13;
 * @author ${author}&#13;
 * @Date ${createDate}&#13;
 */&#13;
@Service("${entityLowerName}Service")&#13;
public class ${entityName}ServiceImpl extends SuperServiceImpl&lt;${entityName}Mapper,${entityName}&gt; implements ${entityName}Service {&#13;
&#13;
}&#13;
</templete></templetes>